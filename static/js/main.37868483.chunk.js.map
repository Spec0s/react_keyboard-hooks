{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setPressedKey","useEffect","handleKeyDown","e","document","addEventListener","removeEventListener","className","type","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAYC,EAAZ,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAAgB,SAACC,GACrBH,EAAcG,EAAEJ,MAKlB,OAFAK,SAASC,iBAAiB,QAASH,GAE5B,WACLE,SAASE,oBAAoB,QAASJ,MAEvC,IAGD,sBAAKK,UAAU,MAAf,UAEE,uBAAOC,KAAK,SAEZ,mBAAGD,UAAU,eAAb,SACW,KAARR,EACC,0BADD,mCAG6BA,EAH7B,W,MClBTU,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.37868483.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setPressedKey] = useState('');\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      setPressedKey(e.key);\n    };\n\n    document.addEventListener('keyup', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* Keep this input for tests */}\n      <input type=\"text\" />\n\n      <p className=\"App__message\">\n        {key === '' ? (\n          'Nothing was pressed yet'\n        ) : (\n          `The last pressed key is [${key}]`\n        )}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}